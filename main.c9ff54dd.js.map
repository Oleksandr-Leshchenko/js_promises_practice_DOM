{"version":3,"sources":["scripts/main.js"],"names":["success","document","createElement","warning","body","querySelector","firstPromise","Promise","resolve","reject","firstSuccess","cloneNode","firstWarning","innerText","setTimeout","addEventListener","event","button","secondPromise","secondSuccess","thirdPromise","thirdSuccess","condition1","condition2","className","dataset","qa","then","result","append","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EAAUC,SAASC,cAAc,OACjCC,EAAUF,SAASC,cAAc,OACjCE,EAAOH,SAASI,cAAc,QAOpC,SAASC,IACA,OAAA,IAAIC,QAAQ,SAACC,EAASC,GACrBC,IAAAA,EAAeV,EAAQW,WAAU,GACjCC,EAAeT,EAAQQ,WAAU,GAEvCD,EAAaG,UAAY,6BACzBD,EAAaC,UAAY,6BAEzBC,WAAW,WAAML,OAAAA,EAAOG,IAAe,MAEvCX,SAASc,iBAAiB,YAAa,SAAAC,GAC7BA,OAAAA,EAAMC,QACP,KAAA,EACA,KAAA,EACA,KAAA,EACHT,EAAQE,QAMlB,SAASQ,IACA,OAAA,IAAIX,QAAQ,SAAAC,GACXW,IAAAA,EAAgBnB,EAAQW,WAAU,GAExCQ,EAAcN,UAAY,8BAE1BZ,SAASc,iBAAiB,YAAa,SAAAC,GAC7BA,OAAAA,EAAMC,QACP,KAAA,EACA,KAAA,EACHT,EAAQW,QAMlB,SAASC,IACA,OAAA,IAAIb,QAAQ,SAAAC,GACXa,IAAAA,EAAerB,EAAQW,WAAU,GAEnCW,GAAa,EACbC,GAAa,EAEjBF,EAAaR,UAAY,6BAEzBZ,SAASc,iBAAiB,YAAa,SAAAC,GAC7BA,OAAAA,EAAMC,QACP,KAAA,EACHK,GAAa,EACb,MACG,KAAA,EACHC,GAAa,EAIbD,GAAcC,GAChBf,EAAQa,OA9DhBrB,EAAQwB,UAAY,UACpBxB,EAAQyB,QAAQC,GAAK,eACrBvB,EAAQqB,UAAY,UACpBrB,EAAQsB,QAAQC,GAAK,eAiErBpB,IACGqB,KAAK,SAAAC,GAAUxB,OAAAA,EAAKyB,OAAOD,KAC3BE,MAAM,SAAAC,GAAS3B,OAAAA,EAAKyB,OAAOE,KAE9Bb,IACGS,KAAK,SAAAC,GAAUxB,OAAAA,EAAKyB,OAAOD,KAC3BE,MAAM,SAAAC,GAAS3B,OAAAA,EAAKyB,OAAOE,KAE9BX,IACGO,KAAK,SAAAC,GAAUxB,OAAAA,EAAKyB,OAAOD,KAC3BE,MAAM,SAAAC,GAAS3B,OAAAA,EAAKyB,OAAOE","file":"main.c9ff54dd.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst success = document.createElement('div');\nconst warning = document.createElement('div');\nconst body = document.querySelector('body');\n\nsuccess.className = 'success';\nsuccess.dataset.qa = 'notification';\nwarning.className = 'warning';\nwarning.dataset.qa = 'notification';\n\nfunction firstPromise() {\n  return new Promise((resolve, reject) => {\n    const firstSuccess = success.cloneNode(true);\n    const firstWarning = warning.cloneNode(true);\n\n    firstSuccess.innerText = 'First promise was resolved';\n    firstWarning.innerText = 'First promise was rejected';\n\n    setTimeout(() => reject(firstWarning), 2900);\n\n    document.addEventListener('mousedown', event => {\n      switch (event.button) {\n        case 0:\n        case 1:\n        case 2:\n          resolve(firstSuccess);\n      }\n    });\n  });\n}\n\nfunction secondPromise() {\n  return new Promise(resolve => {\n    const secondSuccess = success.cloneNode(true);\n\n    secondSuccess.innerText = 'Second promise was resolved';\n\n    document.addEventListener('mousedown', event => {\n      switch (event.button) {\n        case 0:\n        case 2:\n          resolve(secondSuccess);\n      }\n    });\n  });\n}\n\nfunction thirdPromise() {\n  return new Promise(resolve => {\n    const thirdSuccess = success.cloneNode(true);\n\n    let condition1 = false;\n    let condition2 = false;\n\n    thirdSuccess.innerText = 'Third promise was resolved';\n\n    document.addEventListener('mousedown', event => {\n      switch (event.button) {\n        case 0:\n          condition1 = true;\n          break;\n        case 2:\n          condition2 = true;\n          break;\n      }\n\n      if (condition1 && condition2) {\n        resolve(thirdSuccess);\n      }\n    });\n  });\n}\n\nfirstPromise()\n  .then(result => body.append(result))\n  .catch(error => body.append(error));\n\nsecondPromise()\n  .then(result => body.append(result))\n  .catch(error => body.append(error));\n\nthirdPromise()\n  .then(result => body.append(result))\n  .catch(error => body.append(error));\n"]}